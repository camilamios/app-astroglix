{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/camilamota/Developer/app-astroglix/src/app/api/check-horoscope-subscription/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\n// Simulação de banco de dados de assinaturas (em produção, usar banco real)\nconst subscriptions = new Map<string, {\n  id: string\n  customerEmail: string\n  customerName: string\n  status: 'active' | 'cancelled' | 'expired'\n  startDate: string\n  nextBillingDate: string\n  personalData: any\n}>()\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    const { email } = body\n\n    if (!email) {\n      return NextResponse.json({\n        success: false,\n        error: 'E-mail é obrigatório'\n      }, { status: 400 })\n    }\n\n    // Em produção, verificar no banco de dados real\n    // Por enquanto, simular verificação\n    const subscription = subscriptions.get(email)\n    \n    if (!subscription) {\n      return NextResponse.json({\n        success: true,\n        isSubscribed: false,\n        subscription: null\n      })\n    }\n\n    // Verificar se a assinatura está ativa\n    const now = new Date()\n    const nextBillingDate = new Date(subscription.nextBillingDate)\n    const isActive = subscription.status === 'active' && nextBillingDate > now\n\n    return NextResponse.json({\n      success: true,\n      isSubscribed: isActive,\n      subscription: {\n        id: subscription.id,\n        status: subscription.status,\n        startDate: subscription.startDate,\n        nextBillingDate: subscription.nextBillingDate,\n        customerName: subscription.customerName\n      }\n    })\n\n  } catch (error) {\n    console.error('❌ Erro ao verificar assinatura:', error)\n    \n    return NextResponse.json({\n      success: false,\n      error: error instanceof Error ? error.message : 'Erro interno do servidor'\n    }, { status: 500 })\n  }\n}\n\n// Função para simular ativação de assinatura (chamada pelo webhook)\nexport function activateSubscription(email: string, paymentId: string, personalData: any) {\n  const subscriptionId = `horoscope_sub_${Date.now()}`\n  const startDate = new Date()\n  const nextBillingDate = new Date()\n  nextBillingDate.setMonth(nextBillingDate.getMonth() + 1)\n\n  subscriptions.set(email, {\n    id: subscriptionId,\n    customerEmail: email,\n    customerName: personalData.fullName,\n    status: 'active',\n    startDate: startDate.toISOString(),\n    nextBillingDate: nextBillingDate.toISOString(),\n    personalData\n  })\n\n  console.log('✅ Assinatura de horóscopo ativada:', {\n    subscriptionId,\n    email,\n    startDate: startDate.toISOString(),\n    nextBillingDate: nextBillingDate.toISOString()\n  })\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEA,4EAA4E;AAC5E,MAAM,gBAAgB,IAAI;AAUnB,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,GAAG;QAElB,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,gDAAgD;QAChD,oCAAoC;QACpC,MAAM,eAAe,cAAc,GAAG,CAAC;QAEvC,IAAI,CAAC,cAAc;YACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,cAAc;gBACd,cAAc;YAChB;QACF;QAEA,uCAAuC;QACvC,MAAM,MAAM,IAAI;QAChB,MAAM,kBAAkB,IAAI,KAAK,aAAa,eAAe;QAC7D,MAAM,WAAW,aAAa,MAAM,KAAK,YAAY,kBAAkB;QAEvE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,cAAc;YACd,cAAc;gBACZ,IAAI,aAAa,EAAE;gBACnB,QAAQ,aAAa,MAAM;gBAC3B,WAAW,aAAa,SAAS;gBACjC,iBAAiB,aAAa,eAAe;gBAC7C,cAAc,aAAa,YAAY;YACzC;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QAEjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF;AAGO,SAAS,qBAAqB,KAAa,EAAE,SAAiB,EAAE,YAAiB;IACtF,MAAM,iBAAiB,CAAC,cAAc,EAAE,KAAK,GAAG,IAAI;IACpD,MAAM,YAAY,IAAI;IACtB,MAAM,kBAAkB,IAAI;IAC5B,gBAAgB,QAAQ,CAAC,gBAAgB,QAAQ,KAAK;IAEtD,cAAc,GAAG,CAAC,OAAO;QACvB,IAAI;QACJ,eAAe;QACf,cAAc,aAAa,QAAQ;QACnC,QAAQ;QACR,WAAW,UAAU,WAAW;QAChC,iBAAiB,gBAAgB,WAAW;QAC5C;IACF;IAEA,QAAQ,GAAG,CAAC,sCAAsC;QAChD;QACA;QACA,WAAW,UAAU,WAAW;QAChC,iBAAiB,gBAAgB,WAAW;IAC9C;AACF","debugId":null}}]
}