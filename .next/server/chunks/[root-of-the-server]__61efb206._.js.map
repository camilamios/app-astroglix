{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///Users/camilamota/Developer/app-astroglix/src/app/api/get-latest-payment/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { readFile } from 'fs/promises'\nimport { join } from 'path'\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const customerEmail = searchParams.get('email')\n    const customerName = searchParams.get('name')\n\n    console.log('üîç Buscando √∫ltimo pagamento para:', { customerEmail, customerName })\n\n    // Buscar dados salvos\n    const tmpDir = join(process.cwd(), 'tmp')\n    \n    try {\n      const fs = require('fs')\n      const files = fs.readdirSync(tmpDir).filter((file: string) => file.endsWith('.json'))\n      \n      let latestPayment = null\n      let latestTimestamp = 0\n\n      // Buscar arquivo mais recente com dados do cliente\n      for (const file of files) {\n        try {\n          const filePath = join(tmpDir, file)\n          const fileContent = await readFile(filePath, 'utf-8')\n          const data = JSON.parse(fileContent)\n          \n          // Verificar se √© do cliente e se √© mais recente\n          if (data.customerData?.email === customerEmail && \n              data.customerData?.name === customerName &&\n              data.timestamp) {\n            \n            const timestamp = new Date(data.timestamp).getTime()\n            if (timestamp > latestTimestamp) {\n              latestTimestamp = timestamp\n              latestPayment = data\n            }\n          }\n        } catch (error) {\n          console.error('Erro ao ler arquivo:', file, error)\n        }\n      }\n\n      if (latestPayment) {\n        console.log('‚úÖ √öltimo pagamento encontrado:', latestPayment.paymentId)\n        \n        return NextResponse.json({\n          success: true,\n          data: latestPayment\n        })\n      } else {\n        console.log('‚ùå Nenhum pagamento encontrado para:', customerEmail)\n        return NextResponse.json({\n          success: false,\n          error: 'Nenhum pagamento encontrado'\n        }, { status: 404 })\n      }\n      \n    } catch (fileError) {\n      console.error('‚ùå Erro ao buscar arquivos:', fileError)\n      return NextResponse.json({\n        success: false,\n        error: 'Erro ao buscar dados de pagamento'\n      }, { status: 500 })\n    }\n\n  } catch (error) {\n    console.error('üí• Erro na API get-latest-payment:', error)\n    \n    return NextResponse.json({\n      success: false,\n      error: 'Erro interno do servidor'\n    }, { status: 500 })\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,gBAAgB,aAAa,GAAG,CAAC;QACvC,MAAM,eAAe,aAAa,GAAG,CAAC;QAEtC,QAAQ,GAAG,CAAC,sCAAsC;YAAE;YAAe;QAAa;QAEhF,sBAAsB;QACtB,MAAM,SAAS,CAAA,GAAA,iGAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,IAAI;QAEnC,IAAI;YACF,MAAM;YACN,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,MAAM,CAAC,CAAC,OAAiB,KAAK,QAAQ,CAAC;YAE5E,IAAI,gBAAgB;YACpB,IAAI,kBAAkB;YAEtB,mDAAmD;YACnD,KAAK,MAAM,QAAQ,MAAO;gBACxB,IAAI;oBACF,MAAM,WAAW,CAAA,GAAA,iGAAA,CAAA,OAAI,AAAD,EAAE,QAAQ;oBAC9B,MAAM,cAAc,MAAM,CAAA,GAAA,qHAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;oBAC7C,MAAM,OAAO,KAAK,KAAK,CAAC;oBAExB,gDAAgD;oBAChD,IAAI,KAAK,YAAY,EAAE,UAAU,iBAC7B,KAAK,YAAY,EAAE,SAAS,gBAC5B,KAAK,SAAS,EAAE;wBAElB,MAAM,YAAY,IAAI,KAAK,KAAK,SAAS,EAAE,OAAO;wBAClD,IAAI,YAAY,iBAAiB;4BAC/B,kBAAkB;4BAClB,gBAAgB;wBAClB;oBACF;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,wBAAwB,MAAM;gBAC9C;YACF;YAEA,IAAI,eAAe;gBACjB,QAAQ,GAAG,CAAC,kCAAkC,cAAc,SAAS;gBAErE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACvB,SAAS;oBACT,MAAM;gBACR;YACF,OAAO;gBACL,QAAQ,GAAG,CAAC,uCAAuC;gBACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACvB,SAAS;oBACT,OAAO;gBACT,GAAG;oBAAE,QAAQ;gBAAI;YACnB;QAEF,EAAE,OAAO,WAAW;YAClB,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QAEpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO;QACT,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}